// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::vk::{VkStructureType,RawVkStructureType};
use vulkan::nv::{VkAccelerationStructureInfo,RawVkAccelerationStructureInfo};

/// Wrapper for [VkAccelerationStructureCreateInfoNV](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkAccelerationStructureCreateInfoNV.html).
#[derive(Debug, Clone)]
pub struct VkAccelerationStructureCreateInfo {
    pub compacted_size: usize,
    pub info: VkAccelerationStructureInfo,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkAccelerationStructureCreateInfo {
    pub s_type: RawVkStructureType,
    pub next: *mut c_void,
    pub compacted_size: u64,
    pub info: RawVkAccelerationStructureInfo,
}

impl VkWrappedType<RawVkAccelerationStructureCreateInfo> for VkAccelerationStructureCreateInfo {
    fn vk_to_raw(src: &VkAccelerationStructureCreateInfo, dst: &mut RawVkAccelerationStructureCreateInfo) {
        dst.s_type = vk_to_raw_value(&VkStructureType::AccelerationStructureCreateInfoNv);
        dst.next = ptr::null_mut();
        dst.compacted_size = vk_to_raw_value(&src.compacted_size);
        dst.info = vk_to_raw_value(&src.info);
    }
}

impl VkRawType<VkAccelerationStructureCreateInfo> for RawVkAccelerationStructureCreateInfo {
    fn vk_to_wrapped(src: &RawVkAccelerationStructureCreateInfo) -> VkAccelerationStructureCreateInfo {
        VkAccelerationStructureCreateInfo {
            compacted_size: u64::vk_to_wrapped(&src.compacted_size),
            info: RawVkAccelerationStructureInfo::vk_to_wrapped(&src.info),
        }
    }
}

impl Default for VkAccelerationStructureCreateInfo {
    fn default() -> VkAccelerationStructureCreateInfo {
        VkAccelerationStructureCreateInfo {
            compacted_size: 0,
            info: Default::default(),
        }
    }
}

impl VkSetup for VkAccelerationStructureCreateInfo {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        VkSetup::vk_setup(&mut self.info, fn_table);
    }
}

impl VkFree for RawVkAccelerationStructureCreateInfo {
    fn vk_free(&self) {
        
    }
}