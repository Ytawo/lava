// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::vk::{VkStructureType,RawVkStructureType};
use vulkan::nv::{VkShadingRatePalette,RawVkShadingRatePalette};

/// Wrapper for [VkPipelineViewportShadingRateImageStateCreateInfoNV](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkPipelineViewportShadingRateImageStateCreateInfoNV.html).
#[derive(Debug, Clone)]
pub struct VkPipelineViewportShadingRateImageStateCreateInfo {
    pub shading_rate_image_enable: bool,
    pub shading_rate_palettes: Option<Vec<VkShadingRatePalette>>,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkPipelineViewportShadingRateImageStateCreateInfo {
    pub s_type: RawVkStructureType,
    pub next: *mut c_void,
    pub shading_rate_image_enable: u32,
    pub viewport_count: u32,
    pub shading_rate_palettes: *mut RawVkShadingRatePalette,
}

impl VkWrappedType<RawVkPipelineViewportShadingRateImageStateCreateInfo> for VkPipelineViewportShadingRateImageStateCreateInfo {
    fn vk_to_raw(src: &VkPipelineViewportShadingRateImageStateCreateInfo, dst: &mut RawVkPipelineViewportShadingRateImageStateCreateInfo) {
        dst.s_type = vk_to_raw_value(&VkStructureType::PipelineViewportShadingRateImageStateCreateInfoNv);
        dst.next = ptr::null_mut();
        dst.shading_rate_image_enable = vk_to_raw_value(&src.shading_rate_image_enable);
        dst.viewport_count = get_array_option_len(&src.shading_rate_palettes) as u32;
        dst.shading_rate_palettes = new_ptr_vk_array_checked(&src.shading_rate_palettes);
    }
}

impl VkRawType<VkPipelineViewportShadingRateImageStateCreateInfo> for RawVkPipelineViewportShadingRateImageStateCreateInfo {
    fn vk_to_wrapped(src: &RawVkPipelineViewportShadingRateImageStateCreateInfo) -> VkPipelineViewportShadingRateImageStateCreateInfo {
        VkPipelineViewportShadingRateImageStateCreateInfo {
            shading_rate_image_enable: u32::vk_to_wrapped(&src.shading_rate_image_enable),
            shading_rate_palettes: new_vk_array_checked(src.viewport_count, src.shading_rate_palettes),
        }
    }
}

impl Default for VkPipelineViewportShadingRateImageStateCreateInfo {
    fn default() -> VkPipelineViewportShadingRateImageStateCreateInfo {
        VkPipelineViewportShadingRateImageStateCreateInfo {
            shading_rate_image_enable: false,
            shading_rate_palettes: None,
        }
    }
}

impl VkSetup for VkPipelineViewportShadingRateImageStateCreateInfo {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        
    }
}

impl VkFree for RawVkPipelineViewportShadingRateImageStateCreateInfo {
    fn vk_free(&self) {
        free_vk_ptr_array(self.viewport_count as usize, self.shading_rate_palettes);
    }
}