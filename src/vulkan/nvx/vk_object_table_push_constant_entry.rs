// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::nvx::{VkObjectEntryType,RawVkObjectEntryType};
use vulkan::nvx::{VkObjectEntryUsageFlags,RawVkObjectEntryUsageFlags};
use vulkan::vk::{VkPipelineLayout,RawVkPipelineLayout};
use vulkan::vk::{VkShaderStageFlags,RawVkShaderStageFlags};

/// Wrapper for [VkObjectTablePushConstantEntryNVX](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkObjectTablePushConstantEntryNVX.html).
#[derive(Debug, Clone)]
pub struct VkObjectTablePushConstantEntry {
    pub type_: VkObjectEntryType,
    pub flags: VkObjectEntryUsageFlags,
    pub pipeline_layout: VkPipelineLayout,
    pub stage_flags: VkShaderStageFlags,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkObjectTablePushConstantEntry {
    pub type_: RawVkObjectEntryType,
    pub flags: RawVkObjectEntryUsageFlags,
    pub pipeline_layout: RawVkPipelineLayout,
    pub stage_flags: RawVkShaderStageFlags,
}

impl VkWrappedType<RawVkObjectTablePushConstantEntry> for VkObjectTablePushConstantEntry {
    fn vk_to_raw(src: &VkObjectTablePushConstantEntry, dst: &mut RawVkObjectTablePushConstantEntry) {
        dst.type_ = vk_to_raw_value(&src.type_);
        dst.flags = vk_to_raw_value(&src.flags);
        dst.pipeline_layout = vk_to_raw_value(&src.pipeline_layout);
        dst.stage_flags = vk_to_raw_value(&src.stage_flags);
    }
}

impl VkRawType<VkObjectTablePushConstantEntry> for RawVkObjectTablePushConstantEntry {
    fn vk_to_wrapped(src: &RawVkObjectTablePushConstantEntry) -> VkObjectTablePushConstantEntry {
        VkObjectTablePushConstantEntry {
            type_: RawVkObjectEntryType::vk_to_wrapped(&src.type_),
            flags: RawVkObjectEntryUsageFlags::vk_to_wrapped(&src.flags),
            pipeline_layout: RawVkPipelineLayout::vk_to_wrapped(&src.pipeline_layout),
            stage_flags: RawVkShaderStageFlags::vk_to_wrapped(&src.stage_flags),
        }
    }
}

impl Default for VkObjectTablePushConstantEntry {
    fn default() -> VkObjectTablePushConstantEntry {
        VkObjectTablePushConstantEntry {
            type_: Default::default(),
            flags: Default::default(),
            pipeline_layout: Default::default(),
            stage_flags: Default::default(),
        }
    }
}

impl VkSetup for VkObjectTablePushConstantEntry {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        VkSetup::vk_setup(&mut self.pipeline_layout, fn_table);
    }
}

impl VkFree for RawVkObjectTablePushConstantEntry {
    fn vk_free(&self) {
        
    }
}