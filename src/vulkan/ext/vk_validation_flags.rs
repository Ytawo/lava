// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::vk::{VkStructureType,RawVkStructureType};
use vulkan::ext::{VkValidationCheck,RawVkValidationCheck};

/// Wrapper for [VkValidationFlagBitsEXT](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkValidationFlagBitsEXT.html).
#[derive(Debug, Clone)]
pub struct VkValidationFlags {
    pub disabled_validation_checks: Vec<VkValidationCheck>,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkValidationFlags {
    pub s_type: RawVkStructureType,
    pub next: *mut c_void,
    pub disabled_validation_check_count: u32,
    pub disabled_validation_checks: *mut RawVkValidationCheck,
}

impl VkWrappedType<RawVkValidationFlags> for VkValidationFlags {
    fn vk_to_raw(src: &VkValidationFlags, dst: &mut RawVkValidationFlags) {
        dst.s_type = vk_to_raw_value(&VkStructureType::ValidationFlagsExt);
        dst.next = ptr::null_mut();
        dst.disabled_validation_check_count = src.disabled_validation_checks.len() as u32;
        dst.disabled_validation_checks = new_ptr_vk_array(&src.disabled_validation_checks);
    }
}

impl VkRawType<VkValidationFlags> for RawVkValidationFlags {
    fn vk_to_wrapped(src: &RawVkValidationFlags) -> VkValidationFlags {
        VkValidationFlags {
            disabled_validation_checks: new_vk_array(src.disabled_validation_check_count, src.disabled_validation_checks),
        }
    }
}

impl Default for VkValidationFlags {
    fn default() -> VkValidationFlags {
        VkValidationFlags {
            disabled_validation_checks: Vec::new(),
        }
    }
}

impl VkSetup for VkValidationFlags {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        
    }
}

impl VkFree for RawVkValidationFlags {
    fn vk_free(&self) {
        free_ptr(self.disabled_validation_checks);
    }
}