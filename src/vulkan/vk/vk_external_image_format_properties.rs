// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::vk::{VkStructureType,RawVkStructureType};
use vulkan::vk::{VkExternalMemoryProperties,RawVkExternalMemoryProperties};

/// Wrapper for [VkExternalImageFormatProperties](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkExternalImageFormatProperties.html).
#[derive(Debug, Clone)]
pub struct VkExternalImageFormatProperties {
    pub external_memory_properties: VkExternalMemoryProperties,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkExternalImageFormatProperties {
    pub s_type: RawVkStructureType,
    pub next: *mut c_void,
    pub external_memory_properties: RawVkExternalMemoryProperties,
}

impl VkWrappedType<RawVkExternalImageFormatProperties> for VkExternalImageFormatProperties {
    fn vk_to_raw(src: &VkExternalImageFormatProperties, dst: &mut RawVkExternalImageFormatProperties) {
        dst.s_type = vk_to_raw_value(&VkStructureType::ExternalImageFormatProperties);
        dst.next = ptr::null_mut();
        dst.external_memory_properties = vk_to_raw_value(&src.external_memory_properties);
    }
}

impl VkRawType<VkExternalImageFormatProperties> for RawVkExternalImageFormatProperties {
    fn vk_to_wrapped(src: &RawVkExternalImageFormatProperties) -> VkExternalImageFormatProperties {
        VkExternalImageFormatProperties {
            external_memory_properties: RawVkExternalMemoryProperties::vk_to_wrapped(&src.external_memory_properties),
        }
    }
}

impl Default for VkExternalImageFormatProperties {
    fn default() -> VkExternalImageFormatProperties {
        VkExternalImageFormatProperties {
            external_memory_properties: Default::default(),
        }
    }
}

impl VkSetup for VkExternalImageFormatProperties {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        VkSetup::vk_setup(&mut self.external_memory_properties, fn_table);
    }
}

impl VkFree for RawVkExternalImageFormatProperties {
    fn vk_free(&self) {
        
    }
}