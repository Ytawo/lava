// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;

/// Wrapper for [VkDispatchIndirectCommand](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkDispatchIndirectCommand.html).
#[derive(Debug, Clone)]
pub struct VkDispatchIndirectCommand {
    pub x: u32,
    pub y: u32,
    pub z: u32,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkDispatchIndirectCommand {
    pub x: u32,
    pub y: u32,
    pub z: u32,
}

impl VkWrappedType<RawVkDispatchIndirectCommand> for VkDispatchIndirectCommand {
    fn vk_to_raw(src: &VkDispatchIndirectCommand, dst: &mut RawVkDispatchIndirectCommand) {
        dst.x = src.x;
        dst.y = src.y;
        dst.z = src.z;
    }
}

impl VkRawType<VkDispatchIndirectCommand> for RawVkDispatchIndirectCommand {
    fn vk_to_wrapped(src: &RawVkDispatchIndirectCommand) -> VkDispatchIndirectCommand {
        VkDispatchIndirectCommand {
            x: src.x,
            y: src.y,
            z: src.z,
        }
    }
}

impl Default for VkDispatchIndirectCommand {
    fn default() -> VkDispatchIndirectCommand {
        VkDispatchIndirectCommand {
            x: 0,
            y: 0,
            z: 0,
        }
    }
}

impl VkSetup for VkDispatchIndirectCommand {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        
    }
}

impl VkFree for RawVkDispatchIndirectCommand {
    fn vk_free(&self) {
        
    }
}