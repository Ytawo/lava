// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::vk::{VkFormat,RawVkFormat};

/// Wrapper for [VkVertexInputAttributeDescription](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkVertexInputAttributeDescription.html).
#[derive(Debug, Clone)]
pub struct VkVertexInputAttributeDescription {
    pub location: usize,
    pub binding: usize,
    pub format: VkFormat,
    pub offset: usize,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkVertexInputAttributeDescription {
    pub location: u32,
    pub binding: u32,
    pub format: RawVkFormat,
    pub offset: u32,
}

impl VkWrappedType<RawVkVertexInputAttributeDescription> for VkVertexInputAttributeDescription {
    fn vk_to_raw(src: &VkVertexInputAttributeDescription, dst: &mut RawVkVertexInputAttributeDescription) {
        dst.location = vk_to_raw_value(&src.location);
        dst.binding = vk_to_raw_value(&src.binding);
        dst.format = vk_to_raw_value(&src.format);
        dst.offset = vk_to_raw_value(&src.offset);
    }
}

impl VkRawType<VkVertexInputAttributeDescription> for RawVkVertexInputAttributeDescription {
    fn vk_to_wrapped(src: &RawVkVertexInputAttributeDescription) -> VkVertexInputAttributeDescription {
        VkVertexInputAttributeDescription {
            location: u32::vk_to_wrapped(&src.location),
            binding: u32::vk_to_wrapped(&src.binding),
            format: RawVkFormat::vk_to_wrapped(&src.format),
            offset: u32::vk_to_wrapped(&src.offset),
        }
    }
}

impl Default for VkVertexInputAttributeDescription {
    fn default() -> VkVertexInputAttributeDescription {
        VkVertexInputAttributeDescription {
            location: 0,
            binding: 0,
            format: Default::default(),
            offset: 0,
        }
    }
}

impl VkSetup for VkVertexInputAttributeDescription {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        
    }
}

impl VkFree for RawVkVertexInputAttributeDescription {
    fn vk_free(&self) {
        
    }
}