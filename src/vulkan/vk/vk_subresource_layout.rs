// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;

/// Wrapper for [VkSubresourceLayout](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkSubresourceLayout.html).
#[derive(Debug, Clone)]
pub struct VkSubresourceLayout {
    pub offset: usize,
    pub size: usize,
    pub row_pitch: usize,
    pub array_pitch: usize,
    pub depth_pitch: usize,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkSubresourceLayout {
    pub offset: u64,
    pub size: u64,
    pub row_pitch: u64,
    pub array_pitch: u64,
    pub depth_pitch: u64,
}

impl VkWrappedType<RawVkSubresourceLayout> for VkSubresourceLayout {
    fn vk_to_raw(src: &VkSubresourceLayout, dst: &mut RawVkSubresourceLayout) {
        dst.offset = vk_to_raw_value(&src.offset);
        dst.size = vk_to_raw_value(&src.size);
        dst.row_pitch = vk_to_raw_value(&src.row_pitch);
        dst.array_pitch = vk_to_raw_value(&src.array_pitch);
        dst.depth_pitch = vk_to_raw_value(&src.depth_pitch);
    }
}

impl VkRawType<VkSubresourceLayout> for RawVkSubresourceLayout {
    fn vk_to_wrapped(src: &RawVkSubresourceLayout) -> VkSubresourceLayout {
        VkSubresourceLayout {
            offset: u64::vk_to_wrapped(&src.offset),
            size: u64::vk_to_wrapped(&src.size),
            row_pitch: u64::vk_to_wrapped(&src.row_pitch),
            array_pitch: u64::vk_to_wrapped(&src.array_pitch),
            depth_pitch: u64::vk_to_wrapped(&src.depth_pitch),
        }
    }
}

impl Default for VkSubresourceLayout {
    fn default() -> VkSubresourceLayout {
        VkSubresourceLayout {
            offset: 0,
            size: 0,
            row_pitch: 0,
            array_pitch: 0,
            depth_pitch: 0,
        }
    }
}

impl VkSetup for VkSubresourceLayout {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        
    }
}

impl VkFree for RawVkSubresourceLayout {
    fn vk_free(&self) {
        
    }
}