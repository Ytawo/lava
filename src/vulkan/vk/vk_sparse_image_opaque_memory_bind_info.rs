// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::vk::{VkImage,RawVkImage};
use vulkan::vk::{VkSparseMemoryBind,RawVkSparseMemoryBind};

/// Wrapper for [VkSparseImageOpaqueMemoryBindInfo](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkSparseImageOpaqueMemoryBindInfo.html).
#[derive(Debug, Clone)]
pub struct VkSparseImageOpaqueMemoryBindInfo {
    pub image: VkImage,
    pub binds: Vec<VkSparseMemoryBind>,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkSparseImageOpaqueMemoryBindInfo {
    pub image: RawVkImage,
    pub bind_count: u32,
    pub binds: *mut RawVkSparseMemoryBind,
}

impl VkWrappedType<RawVkSparseImageOpaqueMemoryBindInfo> for VkSparseImageOpaqueMemoryBindInfo {
    fn vk_to_raw(src: &VkSparseImageOpaqueMemoryBindInfo, dst: &mut RawVkSparseImageOpaqueMemoryBindInfo) {
        dst.image = vk_to_raw_value(&src.image);
        dst.bind_count = src.binds.len() as u32;
        dst.binds = new_ptr_vk_array(&src.binds);
    }
}

impl VkRawType<VkSparseImageOpaqueMemoryBindInfo> for RawVkSparseImageOpaqueMemoryBindInfo {
    fn vk_to_wrapped(src: &RawVkSparseImageOpaqueMemoryBindInfo) -> VkSparseImageOpaqueMemoryBindInfo {
        VkSparseImageOpaqueMemoryBindInfo {
            image: RawVkImage::vk_to_wrapped(&src.image),
            binds: new_vk_array(src.bind_count, src.binds),
        }
    }
}

impl Default for VkSparseImageOpaqueMemoryBindInfo {
    fn default() -> VkSparseImageOpaqueMemoryBindInfo {
        VkSparseImageOpaqueMemoryBindInfo {
            image: Default::default(),
            binds: Vec::new(),
        }
    }
}

impl VkSetup for VkSparseImageOpaqueMemoryBindInfo {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        VkSetup::vk_setup(&mut self.image, fn_table);
    }
}

impl VkFree for RawVkSparseImageOpaqueMemoryBindInfo {
    fn vk_free(&self) {
        free_vk_ptr_array(self.bind_count as usize, self.binds);
    }
}