// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::vk::{VkStructureType,RawVkStructureType};
use vulkan::khr::{VkResolveModeFlags,RawVkResolveModeFlags};
use vulkan::khr::{VkAttachmentReference2,RawVkAttachmentReference2};

/// Wrapper for [VkSubpassDescriptionDepthStencilResolveKHR](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkSubpassDescriptionDepthStencilResolveKHR.html).
#[derive(Debug, Clone)]
pub struct VkSubpassDescriptionDepthStencilResolve {
    pub depth_resolve_mode: VkResolveModeFlags,
    pub stencil_resolve_mode: VkResolveModeFlags,
    pub depth_stencil_resolve_attachment: Option<VkAttachmentReference2>,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkSubpassDescriptionDepthStencilResolve {
    pub s_type: RawVkStructureType,
    pub next: *mut c_void,
    pub depth_resolve_mode: RawVkResolveModeFlags,
    pub stencil_resolve_mode: RawVkResolveModeFlags,
    pub depth_stencil_resolve_attachment: *mut RawVkAttachmentReference2,
}

impl VkWrappedType<RawVkSubpassDescriptionDepthStencilResolve> for VkSubpassDescriptionDepthStencilResolve {
    fn vk_to_raw(src: &VkSubpassDescriptionDepthStencilResolve, dst: &mut RawVkSubpassDescriptionDepthStencilResolve) {
        dst.s_type = vk_to_raw_value(&VkStructureType::SubpassDescriptionDepthStencilResolveKhr);
        dst.next = ptr::null_mut();
        dst.depth_resolve_mode = vk_to_raw_value(&src.depth_resolve_mode);
        dst.stencil_resolve_mode = vk_to_raw_value(&src.stencil_resolve_mode);
        dst.depth_stencil_resolve_attachment = new_ptr_vk_value_checked(&src.depth_stencil_resolve_attachment);
    }
}

impl VkRawType<VkSubpassDescriptionDepthStencilResolve> for RawVkSubpassDescriptionDepthStencilResolve {
    fn vk_to_wrapped(src: &RawVkSubpassDescriptionDepthStencilResolve) -> VkSubpassDescriptionDepthStencilResolve {
        VkSubpassDescriptionDepthStencilResolve {
            depth_resolve_mode: RawVkResolveModeFlags::vk_to_wrapped(&src.depth_resolve_mode),
            stencil_resolve_mode: RawVkResolveModeFlags::vk_to_wrapped(&src.stencil_resolve_mode),
            depth_stencil_resolve_attachment: new_vk_value_checked(src.depth_stencil_resolve_attachment),
        }
    }
}

impl Default for VkSubpassDescriptionDepthStencilResolve {
    fn default() -> VkSubpassDescriptionDepthStencilResolve {
        VkSubpassDescriptionDepthStencilResolve {
            depth_resolve_mode: Default::default(),
            stencil_resolve_mode: Default::default(),
            depth_stencil_resolve_attachment: None,
        }
    }
}

impl VkSetup for VkSubpassDescriptionDepthStencilResolve {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        
    }
}

impl VkFree for RawVkSubpassDescriptionDepthStencilResolve {
    fn vk_free(&self) {
        free_vk_ptr(self.depth_stencil_resolve_attachment);
    }
}