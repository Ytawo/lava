// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::vk::{VkStructureType,RawVkStructureType};
use vulkan::khr::{VkDisplayProperties,RawVkDisplayProperties};

/// Wrapper for [VkDisplayProperties2KHR](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkDisplayProperties2KHR.html).
#[derive(Debug, Clone)]
pub struct VkDisplayProperties2<'a> {
    pub display_properties: VkDisplayProperties<'a>,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkDisplayProperties2 {
    pub s_type: RawVkStructureType,
    pub next: *mut c_void,
    pub display_properties: RawVkDisplayProperties,
}

impl<'a> VkRawType<VkDisplayProperties2<'a>> for RawVkDisplayProperties2 {
    fn vk_to_wrapped(src: &RawVkDisplayProperties2) -> VkDisplayProperties2<'a> {
        VkDisplayProperties2 {
            display_properties: RawVkDisplayProperties::vk_to_wrapped(&src.display_properties),
        }
    }
}

impl<'a> VkSetup for VkDisplayProperties2<'a> {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        
    }
}

impl VkFree for RawVkDisplayProperties2 {
    fn vk_free(&self) {
        
    }
}